(function(i,r){typeof exports=="object"&&typeof module<"u"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(i=typeof globalThis<"u"?globalThis:i||self,r(i.caduceus={}))})(this,function(i){"use strict";var v=Object.defineProperty;var E=(i,r,u)=>r in i?v(i,r,{enumerable:!0,configurable:!0,writable:!0,value:u}):i[r]=u;var c=(i,r,u)=>E(i,typeof r!="symbol"?r+"":r,u);function r(n,t){return n<t?-1:n>t?1:0}class u{create(t){return new EventSource(t.toString())}}class b{create(t){return new EventSource(t.toString(),{withCredentials:!0})}}class p{constructor(t){this.token=t}create(t){const s=new URL(t.toString());return s.searchParams.set("authorization",this.token),new EventSource(s.toString())}}const h=n=>(n.includes("*")&&(n=["*"]),[...new Set(n)]),S={eventSourceFactory:new u,lastEventId:null},l={append:!0};class d{constructor(t,s={}){c(this,"subscribedTopics",[]);c(this,"currentlySubscribedTopics",[]);c(this,"eventSource",null);c(this,"lastEventId",null);c(this,"options");c(this,"listeners",new Map);this.hub=t,this.options={...S,...s},this.lastEventId=this.options.lastEventId}subscribe(t,s={}){const{append:e}={...l,...s},o=Array.isArray(t)?t:[t];this.subscribedTopics=h(e?[...this.currentlySubscribedTopics,...this.subscribedTopics,...o]:o)}on(t,s){this.listeners.has(t)||this.listeners.set(t,[]),this.listeners.get(t).push(s),this.attachListener(t,s)}unsubscribe(t){const s=Array.isArray(t)?t:[t],e=this.subscribedTopics.filter(o=>!s.includes(o));this.subscribedTopics=h(e),this.connect()}connect(){if(this.eventSource&&this.subscribedTopics.length>0&&r(this.subscribedTopics,this.currentlySubscribedTopics)===0)return this.eventSource;if(this.eventSource&&this.eventSource.close(),this.subscribedTopics.length===0)throw new Error("No topics to subscribe to.");const t={topic:this.subscribedTopics.join(",")};this.lastEventId!==null&&(t.lastEventID=this.lastEventId);const s=this.hub+"?"+new URLSearchParams(t);this.eventSource=this.options.eventSourceFactory.create(s);for(const[e,o]of this.listeners.entries())for(const a of o)this.attachListener(e,a);return this.currentlySubscribedTopics=this.subscribedTopics,this.eventSource}attachListener(t,s){this.eventSource&&this.eventSource.addEventListener(t,e=>{this.lastEventId=e.lastEventId;const o={...e,type:t,json:()=>new Promise(a=>a(JSON.parse(e.data)))};s(o)})}}const f={handler:(n,t)=>{n.on("message",async s=>{const e=await s.json(),o=t.get(e["@id"]);for(const a of o??[])a(e,s)})},resourceListener:n=>t=>Object.assign(n,t),subscribeOptions:{append:!0}};class T{constructor(t,s={}){c(this,"connection");c(this,"listeners",new Map);c(this,"options");this.options={...f,...s},this.connection=new d(t,{...this.options});const{handler:e}=this.options;e(this.connection,this.listeners)}sync(t,s,e){const o=s??t["@id"];this.listeners.has(t["@id"])||(this.listeners.set(t["@id"],[this.options.resourceListener(t)]),this.connection.subscribe(o,{...this.options.subscribeOptions,...e}),this.connection.connect())}on(t,s){const e=this.listeners.get(t["@id"])??[];e.push(s),this.listeners.set(t["@id"],[...new Set(e)])}unsync(t){this.listeners.delete(t["@id"])}}i.CookieBasedAuthorization=b,i.DEFAULT_SUBSCRIBE_OPTIONS=l,i.DefaultEventSourceFactory=u,i.HydraSynchronizer=T,i.Mercure=d,i.QueryParamAuthorization=p,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
